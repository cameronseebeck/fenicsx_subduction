name: Test stable build of book

on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    branches: ["main", "release"]
  push:
    branches: ["main"] # this also gets called by deploy on push into release

env:
  HDF5_MPI: "ON"
  HDF5_DIR: "/usr/local/"
  DISPLAY: ":99.0"
  DEB_PYTHON_INSTALL_LAYOUT: deb_system

jobs:
  build-book:
    runs-on: ubuntu-latest
    container: ghcr.io/cianwilson/fenicsx_subduction:release

    env:
      PYVISTA_TRAME_SERVER_PROXY_PREFIX: "/proxy/"
      PYVISTA_TRAME_SERVER_PROXY_ENABLED: "True"
      PYVISTA_OFF_SCREEN: false
      PYVISTA_JUPYTER_BACKEND: "html"
      BASE_KEY: jupyter-book-cache-${{ github.base_ref || github.ref_name }}-${{ hashFiles('notebooks/sz_base.ipynb', 'notebooks/sz_slab.ipynb', 'notebooks/sz_geometry.ipynb', 'notebooks/sz_problem.ipynb', 'python/geometry.py', 'python/utils.py') }}
      HEAD_KEY: jupyter-book-cache-${{ github.head_ref || github.ref_name }}-${{ hashFiles('notebooks/sz_base.ipynb', 'notebooks/sz_slab.ipynb', 'notebooks/sz_geometry.ipynb', 'notebooks/sz_problem.ipynb', 'python/geometry.py', 'python/utils.py') }}

    steps:
      - uses: actions/checkout@v4

      - name: Restore cache
        id: cache-restore
        uses: actions/cache/restore@v4
        if: env.BRANCH_NAME != 'release'
        with:
          path: _build/.jupyter_cache
          key: ${{ env.HEAD_KEY }}
          restore-keys: ${{ env.BASE_KEY }}

      - name: Build the book
        run: jupyter-book build . -W --keep-going

      - uses: actions/upload-artifact@v4
        if : always()
        with:
          name: webpage
          path: ./_build/html
          retention-days: 2
          if-no-files-found: error

      - name: Delete previous cache
        if: env.BRANCH_NAME != 'release' && steps.cache-restore.outputs.cache-hit
        continue-on-error: true
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete ${{ env.HEAD_KEY }} --confirm

      - name: Save cache
        uses: actions/cache/save@v4
        if: env.BRANCH_NAME != 'release'
        with:
          path: _build/.jupyter_cache
          key: ${{ env.HEAD_KEY }}

